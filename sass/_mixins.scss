// prefix declarations
@mixin prefixed($property, $value) {
	@if $webkit == true {
		-webkit-#{$property}: #{$value};
	}

	@if $moz == true {
		-moz-#{$property}: #{$value};
	}

	@if $ms == true {
		-ms-#{$property}: #{$value};
	}

	@if $o == true {
		-o-#{$property}: #{$value};
	}

	#{$property}: #{$value};
}

 // prefix keyframes
@mixin keyframes($name) {
	@if $webkit == true {
		@-webkit-keyframes #{$name} {
			@content;
		}
	}

	@if $moz == true {
		@-moz-keyframes #{$name} {
			@content;
		}
	}

	@if $ms == true {
		@-ms-keyframes #{$name} {
			@content;
		}
	}

	@if $o == true {
		@-o-keyframes #{$name} {
			@content;
		}
	}

	@keyframes #{$name} {
		@content;
	}
}

@mixin property() {
	// Improve performance on mobile/tablet devices
	// Perspective reduces blurryness of text in Chrome
	@include prefixed(transition, 0.3s ease-out);
}
@mixin transform() {
	// Improve performance on mobile/tablet devices
	// Perspective reduces blurryness of text in Chrome
	@include prefixed(transform, translate(0, -50%));
}

//FontAwesome Psedo element
$name		: "\f007";
$email	: "\f0e0";
$phone	: "\f879";
$massage	: "\f4ad";

@mixin fontawesome($weight, $direction) {
	position: relative;
	&::before{
      position: absolute;
		font-family: "Font Awesome 5 Free";
		top: 13px;
		left: 15px;
      @if $direction == name {
			font-weight: $weight;
			content: $name;
		} @else if $direction == email {
			font-weight: $weight;
			content: $email;
		} @else if $direction == phone {
			font-weight: $weight;
			content: $phone;
		} @else if $direction == massage {
			font-weight: $weight;
			content: $massage;
		} @else {
			@error "Unknown direction #{$direction}.";
		}
   }
	
}

// As is often the case, some devices/browsers need additional code to get CSS to work
// in the most desired way. These mixins are used to quickly drop in hacks for each element
// Find out more here: https://github.com/IanLunn/Hover/wiki/Hacks-Explained

@mixin hardwareAccel() {
	// Improve performance on mobile/tablet devices
	// Perspective reduces blurryness of text in Chrome
	@include prefixed(transform, perspective(1px) translateZ(0));
}

@mixin improveAntiAlias() {
	// Improve aliasing on mobile/tablet devices
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin forceBlockLevel() {
	// Transforms need to be block-level to work
	display: inline-block;
	vertical-align: middle;
}

@mixin hacks() {
	@include forceBlockLevel();
	@include hardwareAccel();
	@include improveAntiAlias();
}

// Button Hover element

/* Sweep To Hover Bottom */
@mixin border-bottom {
	@include hacks();
	position: relative;
	border: 2px solid #fff;
	@include prefixed(transition-property, color);
	@include prefixed(transition-duration, $mediumDuration);

	&:before {
		content: "";
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: $activeColor;
		@include prefixed(transform, scaleY(0));
		@include prefixed(transform-origin, 50% 0);
		@include prefixed(transition-property, transform);
		@include prefixed(transition-duration, $mediumDuration);
		@include prefixed(transition-timing-function, ease-out);
	}

	&:hover,
	&:focus,
	&:active {
		color: white;
		border: 2px solid $red;
		&:before {
			@include prefixed(transform, scaleY(1));
		}
	}
}

/* Sweep To Hover Bottom */
@mixin bottom {
	@include hacks();
	position: relative;
	border: 2px solid $red;
	@include prefixed(transition-property, color);
	@include prefixed(transition-duration, $mediumDuration);

	&:before {
		content: "";
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: $theme-color;
		@include prefixed(transform, scaleY(0));
		@include prefixed(transform-origin, 50% 0);
		@include prefixed(transition-property, transform);
		@include prefixed(transition-duration, $mediumDuration);
		@include prefixed(transition-timing-function, ease-out);
	}

	&:hover,
	&:focus,
	&:active {
		color: white;
		border: 2px solid #fff;
		&:before {
			@include prefixed(transform, scaleY(1));
		}
	}
}

/* Radial Out */
@mixin radial-out {
	@include hacks();
	position: relative;
	overflow: hidden;
	background: transparent;
	@include prefixed(transition-property, color);
	@include prefixed(transition-duration, $mediumDuration);

	&:before {
		content: "";
		position: absolute;
		z-index: -1;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: #1c1d68;
		border-radius: 100%;
		@include prefixed(transform, scale(0));
		@include prefixed(transition-property, transform);
		@include prefixed(transition-duration, $mediumDuration);
		@include prefixed(transition-timing-function, ease-out);
	}

	&:hover,
	&:focus,
	&:active {
		color: white;

		&:before {
			@include prefixed(transform, scale(2));
		}
	}
}


@if $includeClasses {
	.#{$nameSpace}-border-bottom {
		@include border-bottom();
	}
}
@if $includeClasses {
	.#{$nameSpace}-bottom {
		@include bottom();
	}
}

@if $includeClasses {
	.#{$nameSpace}-radial-out {
		@include radial-out();
	}
}


